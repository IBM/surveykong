# Generated by Django 3.2.5 on 2021-11-24 18:54

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import survey.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BannerNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('active', models.BooleanField(default=False)),
                ('banner_text', models.CharField(max_length=255)),
                ('banner_type', models.CharField(choices=[('info', 'info'), ('warn', 'warn'), ('alert', 'alert')], default='info', max_length=10)),
            ],
            options={
                'ordering': ['active', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Button',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('feedback_default', models.BooleanField(default=False)),
                ('name', models.CharField(help_text='A display name to identify this button', max_length=64, unique=True)),
                ('text', models.CharField(help_text='The actual button text', max_length=64)),
                ('background_color', models.CharField(help_text='The hex color code, include the #', max_length=7, validators=[django.core.validators.MinLengthValidator(7)])),
                ('text_color', models.CharField(editable=False, max_length=7, validators=[django.core.validators.MinLengthValidator(7)])),
                ('position', models.CharField(choices=[('top', 'Top'), ('right', 'Right'), ('bottom', 'Bottom'), ('left', 'Left')], default='right', max_length=8)),
                ('offset', models.PositiveIntegerField(default=50, help_text='The top/left button offset, in %', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='button_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='button_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['text'],
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('enabled', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
                ('uid', models.CharField(editable=False, max_length=25, unique=True)),
                ('key', models.CharField(blank=True, help_text='Auto-generated nice name identifier', max_length=128)),
                ('slack_notification_url', models.URLField(blank=True, max_length=255, null=True)),
                ('survey_trigger_type', models.CharField(blank=True, choices=[('intercept', 'Intercept'), ('button', 'Button')], default='', help_text='If you are embedding this survey on a page, how do you want it to be triggered', max_length=10)),
                ('mouseout_trigger', models.BooleanField(default=True, help_text="Intercept will display when user's mouse leaves the browser window")),
                ('url_accessible', models.BooleanField(default=True, verbose_name='URL accessible')),
                ('visitor_percent', models.PositiveIntegerField(default=25, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('limit_one_submission', models.BooleanField(default=True, help_text='Users will only be allowed to take the survey once, every ## days.')),
                ('limit_one_submission_days', models.PositiveIntegerField(default=90, help_text='Allow the user to enter the pool of participants after these many days.')),
                ('seconds_on_page_delay', models.PositiveIntegerField(default=0)),
                ('repeat_visitors_only', models.BooleanField(default=False, help_text='Only users who have visited the site at least twice (2+ sessions) will be included')),
                ('page_view_count', models.PositiveIntegerField(default=0)),
                ('start_date', models.DateField(blank=True, help_text='Campaign will be active starting at Midnight on this date.', null=True)),
                ('stop_date', models.DateField(blank=True, help_text='Campaign will deactivate at 11:59pm on this date.', null=True)),
                ('response_count_limit', models.PositiveIntegerField(blank=True, help_text='Disable the camapign when this many responses are received.', null=True)),
                ('latest_response_date', models.DateTimeField(default=survey.models.defaultLatestDate)),
                ('response_count', models.PositiveIntegerField(default=0)),
                ('unique_visitor_count', models.PositiveIntegerField(default=0)),
                ('intercept_shown_count', models.PositiveIntegerField(default=0)),
                ('comments', models.TextField(blank=True, max_length=512)),
                ('button', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaign_button', to='survey.button')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campaign_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['project__name', 'survey__name'],
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='domain_created_by', to=settings.AUTH_USER_MODEL)),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='domain_lead', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='domain_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='language_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='language_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_number', models.PositiveIntegerField(default=1)),
            ],
            options={
                'ordering': ['survey', 'page_number'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.SlugField(help_text='This is used in the response data to identify this question. No spaces allowed: Use underscores', max_length=48)),
                ('question_text', models.CharField(blank=True, max_length=255)),
                ('question_text_past_tense', models.CharField(blank=True, help_text="This is used for 'take later' and email campaigns", max_length=255)),
                ('required', models.BooleanField(default=False)),
                ('shared', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[('checkbox', 'Checkboxes'), ('date', 'Date'), ('email', 'Email'), ('hidden', 'Hidden'), ('message', 'Message'), ('number', 'Number'), ('radio', 'Radio buttons'), ('stars', 'Stars'), ('select', 'Select list'), ('selectmultiple', 'Select multiple'), ('textinput', 'Text input'), ('textarea', 'Textarea'), ('url', 'URL')], default='text', max_length=20)),
                ('layout', models.CharField(choices=[('horizontal', 'Horizontal'), ('vertical', 'Vertical')], default='vertical', max_length=15)),
                ('message_text', models.TextField(blank=True, max_length=1200, verbose_name='Message to display. HTML is allowed. BE CAREFUL.')),
                ('placeholder_text', models.CharField(blank=True, max_length=255)),
                ('character_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('anchor_text_beginning', models.CharField(blank=True, max_length=50)),
                ('anchor_text_end', models.CharField(blank=True, max_length=50)),
                ('answers', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), size=None), blank=True, null=True, size=None)),
                ('default_answer', models.CharField(blank=True, max_length=96)),
                ('parent_answer', models.CharField(blank=True, max_length=255)),
                ('parent_answer_action', models.CharField(choices=[('show', 'Show this question'), ('hide', 'Hide this question')], default='show', max_length=4)),
                ('parent_question', models.ForeignKey(blank=True, help_text="Select the question who's answer should show/hide this question", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='question_parent_question', to='survey.question')),
            ],
            options={
                'ordering': ['question_text'],
            },
        ),
        migrations.CreateModel(
            name='SurveyThankyou',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('message', models.TextField(help_text='Message to display. HTML is allowed at your own risk.', max_length=512)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='survey_thankyou_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='survey_thankyou_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SurveyInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('message', models.TextField(help_text='Message to display. HTML is allowed at your own risk.', max_length=512)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='survey_invite_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='survey_invite_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('survey_type', models.CharField(choices=[('vote', 'VotE'), ('feedback', 'Feedback'), ('other', 'Other')], default='other', help_text='IMPORTANT: This determines how responses are tagged and displayed.', max_length=10)),
                ('feedback_default', models.BooleanField(default=False)),
                ('name', models.CharField(help_text='Only used in admin, to easily identify this survey.', max_length=128, unique=True)),
                ('title', models.CharField(blank=True, help_text='This will show as the header above the survey', max_length=128)),
                ('comments', models.TextField(blank=True, max_length=512)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='survey_created_by', to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='survey_language', to='survey.language')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='survey_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('uid', models.CharField(max_length=24, unique=True)),
                ('uuid', models.CharField(max_length=64)),
                ('raw_data', models.JSONField()),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='response_campaign', to='survey.campaign')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReleaseNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('release_number', models.PositiveIntegerField(default=survey.models.incrementReleaseNum, unique=True)),
                ('date', models.DateTimeField(default=survey.models.getToday)),
                ('notes', models.TextField(max_length=1000)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_note_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_note_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-release_number'],
            },
        ),
        migrations.CreateModel(
            name='QuestionOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.FloatField(default=1)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_order_page', to='survey.page')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_order_question', to='survey.question')),
            ],
            options={
                'ordering': ['page', 'question_number'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('uid', models.CharField(editable=False, max_length=24, unique=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('display_name', models.CharField(blank=True, help_text='Alternate name to display in surveys if not name above', max_length=128, verbose_name='Alternate display name')),
                ('comments', models.TextField(blank=True, max_length=512)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_contact', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_created_by', to=settings.AUTH_USER_MODEL)),
                ('domain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_domain', to='survey.domain')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inactive', models.BooleanField(default=False)),
                ('full_name', models.CharField(blank=True, max_length=255)),
                ('image', models.TextField(blank=True, default='')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['full_name'],
            },
        ),
        migrations.AddField(
            model_name='page',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_survey', to='survey.survey'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_project', to='survey.project'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_survey', to='survey.survey'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='survey_invite',
            field=models.ForeignKey(blank=True, help_text='If this is an intercept survey, choose which invite to use', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaign_survey_invite', to='survey.surveyinvite'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='survey_thankyou',
            field=models.ForeignKey(blank=True, help_text='Choose the thankyou message to show for this survey', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaign_survey_thankyou', to='survey.surveythankyou'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campaign_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CampaignUserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('session_count', models.PositiveIntegerField(default=0)),
                ('intercept_shown_at', models.DateTimeField(blank=True, null=True)),
                ('take_later_at', models.DateTimeField(blank=True, null=True)),
                ('email_link_at', models.DateTimeField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('reset_date', models.DateTimeField(blank=True, null=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_user_info_campaign', to='survey.campaign')),
            ],
            options={
                'ordering': ['campaign', '-intercept_shown_at', '-take_later_at', '-submitted_at'],
                'unique_together': {('uuid', 'campaign')},
            },
        ),
    ]
